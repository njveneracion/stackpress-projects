export default function AdminRestorePageFactory(model) {
    return async function AdminRestorePage(req, res, ctx) {
        if (res.body || (res.code && res.code !== 200)) {
            return;
        }
        const view = ctx.config.path('view', {});
        const brand = ctx.config.path('brand', {});
        const language = ctx.config.path('language', {
            key: 'locale',
            locale: 'en_US',
            languages: {}
        });
        const admin = ctx.config.path('admin', {});
        res.data.set('view', {
            base: view.base || '/',
            props: view.props || {}
        });
        res.data.set('brand', {
            name: brand.name || 'Stackpress',
            logo: brand.logo || '/logo.png',
            icon: brand.icon || '/icon.png',
            favicon: brand.favicon || '/favicon.ico'
        });
        res.data.set('language', {
            key: language.key || 'locale',
            locale: language.locale || 'en_US',
            languages: language.languages || {}
        });
        res.data.set('admin', {
            name: admin.name || 'Admin',
            base: admin.base || '/admin',
            menu: admin.menu || []
        });
        const ids = model.ids.map(column => req.data(column.name)).filter(Boolean);
        if (ids.length === model.ids.length) {
            if (req.data('confirmed')) {
                await ctx.emit(`${model.dash}-restore`, req, res);
                if (res.code !== 200) {
                    await ctx.emit('error', req, res);
                    return;
                }
                const base = admin.base || '/admin';
                res.redirect(`${base}/${model.dash}/detail/${ids.join('/')}`);
                return;
            }
            await ctx.emit(`${model.dash}-detail`, req, res);
            if (res.code !== 200) {
                await ctx.emit('error', req, res);
                return;
            }
        }
        else {
            res.setStatus(404);
            await ctx.emit('error', req, res);
        }
    };
}
;
