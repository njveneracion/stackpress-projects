"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Server_1 = require("@stackpress/ingest/Server");
const serve_js_1 = __importDefault(require("../../scripts/serve.js"));
exports.default = (0, Server_1.action)(function ServeScript(_req, res, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        const cli = ctx.plugin('cli');
        const port = ctx.config.path('server.port', 3000);
        (cli === null || cli === void 0 ? void 0 : cli.verbose) && cli.control.system(`Server is running on port ${port}`);
        (cli === null || cli === void 0 ? void 0 : cli.verbose) && cli.control.system('------------------------------');
        const server = yield (0, serve_js_1.default)(ctx, port);
        server.on('error', e => {
            (cli === null || cli === void 0 ? void 0 : cli.verbose) && cli.control.error(e.message);
        });
        server.on('close', () => {
            (cli === null || cli === void 0 ? void 0 : cli.verbose) && cli.control.success('Server Exited.');
        });
        res.setStatus(200);
    });
});
