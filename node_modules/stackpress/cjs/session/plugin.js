"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = plugin;
const Session_js_1 = __importDefault(require("./Session.js"));
function plugin(ctx) {
    if (!ctx.config.get('session'))
        return;
    ctx.on('config', (_req, _res, ctx) => {
        const key = ctx.config.path('session.key', 'session');
        const seed = ctx.config.path('session.seed', 'abc123');
        const access = ctx.config.path('session.access', {});
        ctx.register('session', Session_js_1.default.configure(key, seed, access));
    });
    ctx.on('listen', (_req, _res, ctx) => {
        ctx.import.on('me', () => Promise.resolve().then(() => __importStar(require('./events/session.js'))));
        if (ctx.config.get('auth')) {
            ctx.import.on('auth-signup', () => Promise.resolve().then(() => __importStar(require('./events/signup.js'))));
            ctx.import.on('auth-signin', () => Promise.resolve().then(() => __importStar(require('./events/signin.js'))));
            ctx.import.on('auth-signout', () => Promise.resolve().then(() => __importStar(require('./events/signout.js'))));
            ctx.import.on('authorize', () => Promise.resolve().then(() => __importStar(require('./events/authorize.js'))));
            ctx.import.on('request', () => Promise.resolve().then(() => __importStar(require('./pages/authorize.js'))));
        }
    });
    ctx.on('route', (_req, _res, ctx) => {
        if (!ctx.config.get('auth'))
            return;
        const base = ctx.config.path('auth.base', '/auth');
        ctx.import.all(`${base}/signin`, () => Promise.resolve().then(() => __importStar(require('./pages/signin.js'))));
        ctx.import.all(`${base}/signin/:type`, () => Promise.resolve().then(() => __importStar(require('./pages/signin.js'))));
        ctx.import.all(`${base}/signup`, () => Promise.resolve().then(() => __importStar(require('./pages/signup.js'))));
        ctx.import.all(`${base}/signout`, () => Promise.resolve().then(() => __importStar(require('./pages/signout.js'))));
        ctx.view.all(`${base}/signin`, 'stackpress/esm/session/views/signin', -100);
        ctx.view.all(`${base}/signin/:type`, 'stackpress/esm/session/views/signin', -100);
        ctx.view.all(`${base}/signup`, 'stackpress/esm/session/views/signup', -100);
    });
}
;
