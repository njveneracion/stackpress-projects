"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = searchEventFactory;
const search_js_1 = __importDefault(require("../actions/search.js"));
function searchEventFactory(model) {
    return function SearchEventAction(req, res, ctx) {
        return __awaiter(this, void 0, void 0, function* () {
            if (res.body || (res.code && res.code !== 200)) {
                return;
            }
            if (!req.data.has('columns')
                && Array.isArray(model.query)
                && model.query.length
                && model.query.every(column => typeof column === 'string')) {
                req.data.set('columns', model.query);
            }
            const engine = ctx.plugin('database');
            if (!engine)
                return;
            const seed = ctx.config.path('database.seed');
            const response = yield (0, search_js_1.default)(model, engine, req.data(), seed);
            res.fromStatusResponse(response);
        });
    };
}
;
