"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = generate;
const Registry_js_1 = __importDefault(require("../../schema/Registry.js"));
const schema_js_1 = __importDefault(require("./schema.js"));
const actions_js_1 = __importDefault(require("./actions.js"));
const events_js_1 = __importDefault(require("./events.js"));
const index_js_1 = __importDefault(require("./tests/index.js"));
function generate(props) {
    return __awaiter(this, void 0, void 0, function* () {
        const { schema, project } = props;
        const registry = new Registry_js_1.default(schema);
        (0, actions_js_1.default)(project, registry);
        (0, events_js_1.default)(project, registry);
        (0, schema_js_1.default)(project, registry);
        (0, index_js_1.default)(project, registry);
        for (const model of registry.model.values()) {
            const filepath = `${model.name}/index.ts`;
            const source = project.getSourceFile(filepath)
                || project.createSourceFile(filepath, '', { overwrite: true });
            source.addImportDeclaration({
                moduleSpecifier: './actions/index.js',
                defaultImport: 'actions'
            });
            source.addImportDeclaration({
                moduleSpecifier: './events/index.js',
                defaultImport: 'events'
            });
            source.addImportDeclaration({
                moduleSpecifier: './schema.js',
                defaultImport: 'schema'
            });
            source.addExportDeclaration({
                namedExports: ['actions', 'schema', 'events']
            });
        }
    });
}
;
