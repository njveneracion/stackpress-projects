"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = update;
const Exception_js_1 = __importDefault(require("../../Exception.js"));
const helpers_js_1 = require("../helpers.js");
const detail_js_1 = __importDefault(require("./detail.js"));
function update(model, engine, ids, input, seed) {
    return __awaiter(this, void 0, void 0, function* () {
        const errors = model.assert(input, false);
        if (errors) {
            return Exception_js_1.default
                .for('Invalid parameters')
                .withCode(400)
                .withErrors(errors)
                .toResponse();
        }
        const update = engine
            .update(model.snake)
            .set(model.serialize(input, undefined, seed));
        for (const column of model.ids) {
            if (!ids[column.name]) {
                return Exception_js_1.default
                    .for('Missing %s', column.name)
                    .withCode(400)
                    .toResponse();
            }
            update.where(`${column.snake} = ?`, [ids[column.name]]);
        }
        try {
            yield update;
        }
        catch (e) {
            return (0, helpers_js_1.toErrorResponse)(e);
        }
        return yield (0, detail_js_1.default)(model, engine, ids, undefined, seed);
    });
}
;
