"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = remove;
const helpers_js_1 = require("../helpers.js");
const detail_js_1 = __importDefault(require("./detail.js"));
const update_js_1 = __importDefault(require("./update.js"));
function remove(model, engine, ids) {
    return __awaiter(this, void 0, void 0, function* () {
        var _a;
        const active = (_a = model.active) === null || _a === void 0 ? void 0 : _a.name;
        if (active) {
            return yield (0, update_js_1.default)(model, engine, ids, { [active]: false });
        }
        const row = yield (0, detail_js_1.default)(model, engine, ids);
        if (row.code !== 200) {
            return row;
        }
        const remove = engine.delete(model.snake);
        for (const column of model.ids) {
            remove.where(`${column.snake} = ?`, [ids[column.name]]);
        }
        try {
            yield remove;
        }
        catch (e) {
            return (0, helpers_js_1.toErrorResponse)(e);
        }
        return row;
    });
}
;
