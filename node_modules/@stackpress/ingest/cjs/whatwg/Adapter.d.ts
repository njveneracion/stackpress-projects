import type { UnknownNest } from '@stackpress/lib/types';
import type { WhatwgServer, WhatwgAction, NodeRequest, NodeOptResponse, LoaderResults, CookieOptions } from '../types.js';
import Request from '../Request.js';
import Response from '../Response.js';
export default class Adapter<C extends UnknownNest = UnknownNest> {
    static plug<C extends UnknownNest = UnknownNest>(context: WhatwgServer<C>, request: NodeRequest, action?: string | WhatwgAction<C>): Promise<NodeOptResponse>;
    protected _context: WhatwgServer<C>;
    protected _request: NodeRequest;
    constructor(context: WhatwgServer<C>, request: NodeRequest);
    plug(action?: string | WhatwgAction<C>): Promise<NodeOptResponse>;
    request(): Request<globalThis.Request>;
    response(): Response<NodeOptResponse>;
}
export declare function loader(resource: NodeRequest): (req: Request<NodeRequest>) => Promise<LoaderResults | undefined>;
export declare function dispatcher(options?: CookieOptions): (res: Response<NodeOptResponse>) => Promise<globalThis.Response>;
