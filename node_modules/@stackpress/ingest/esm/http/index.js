import { createServer } from 'node:http';
import Router from '../Router.js';
import Server from '../Server.js';
import Adapter, { loader, dispatcher } from './Adapter.js';
export { isObject, objectFromQuery, objectFromFormData, objectFromJson, withUnknownHost, formDataToObject, cookie, session, Status, Exception, ConfigLoader, PluginLoader, Request, Response, Router, ActionRouter, EntryRouter, ImportRouter, ViewRouter, Server, ReadSession, WriteSession } from '../index.js';
export { Adapter, loader, dispatcher };
export function gateway(server) {
    return (options) => createServer(options, (im, sr) => server.handle(im, sr));
}
;
export async function handler(context, request, response, action) {
    return await Adapter.plug(context, request, response, action);
}
;
export function server(options = {}) {
    options.gateway = options.gateway || gateway;
    options.handler = options.handler || handler;
    return new Server(options);
}
;
export function router() {
    return new Router();
}
export function action(action) {
    return action;
}
;
action.props = (action) => {
    return function ActionProps(req, res, ctx) {
        return action({ req, res, ctx });
    };
};
