import Exception from '../Exception.js';
export default class Update {
    _data = {};
    _engine;
    _filters = [];
    _table;
    get engine() {
        return this._engine;
    }
    set engine(engine) {
        this._engine = engine;
    }
    constructor(table, engine) {
        this._table = table;
        this._engine = engine;
    }
    build() {
        return {
            data: this._data,
            filters: this._filters,
            table: this._table
        };
    }
    query(dialect) {
        dialect = dialect || this._engine?.dialect;
        if (!dialect) {
            throw Exception.for('No dialect provided');
        }
        return dialect.update(this);
    }
    set(data) {
        this._data = data;
        return this;
    }
    then(resolve, reject = () => { }) {
        if (!this._engine) {
            throw Exception.for('No engine provided');
        }
        return this._engine.query(this.query()).then(resolve).catch(reject);
    }
    where(query, values = []) {
        this._filters.push([query, values]);
        return this;
    }
}
