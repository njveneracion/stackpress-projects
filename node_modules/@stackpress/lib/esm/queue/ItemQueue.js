export default class ItemQueue {
    queue = [];
    _lower = 0;
    _upper = 0;
    get size() {
        return this.queue.length;
    }
    add(item, priority = 0) {
        if (priority > this._upper) {
            this._upper = priority;
        }
        else if (priority < this._lower) {
            this._lower = priority;
        }
        this.queue.push({ item, priority });
        this.queue.sort((a, b) => {
            return a.priority <= b.priority ? 1 : -1;
        });
        return this;
    }
    push(item) {
        return this.add(item, this._lower - 1);
    }
    shift(item) {
        return this.add(item, this._upper + 1);
    }
    consume() {
        return this.queue.shift()?.item;
    }
}
