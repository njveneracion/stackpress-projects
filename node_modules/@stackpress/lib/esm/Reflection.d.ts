import { CallSite } from './types.js';
export default class Reflection {
    static stack(): Reflection[];
    readonly trace: CallSite;
    get column(): number;
    get evalOrigin(): string;
    get file(): string;
    get func(): Function;
    get funcName(): string;
    get line(): number;
    get method(): string;
    get promiseIndex(): number | null;
    get self(): unknown;
    get type(): string;
    constructor(trace: CallSite);
    isAsync(): boolean;
    isConstructor(): boolean;
    isEval(): boolean;
    isNative(): boolean;
    isPromiseAll(): boolean;
    isTopLevel(): boolean;
    toObject(): {
        column: number;
        evalOrigin: string;
        file: string;
        func: Function;
        funcName: string;
        line: number;
        method: string;
        promiseIndex: number | null;
        self: unknown;
        type: string;
        isAsync: boolean;
        isConstructor: boolean;
        isEval: boolean;
        isNative: boolean;
        isPromiseAll: boolean;
        isTopLevel: boolean;
    };
}
