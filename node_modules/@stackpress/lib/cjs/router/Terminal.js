"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.control = control;
const prompts_1 = require("@inquirer/prompts");
const Nest_js_1 = require("../data/Nest.js");
const Router_js_1 = __importDefault(require("./Router.js"));
function control(brand = '') {
    const controls = {
        brand,
        error(message, variables = []) {
            this.output(message, variables, '\x1b[31m%s\x1b[0m');
        },
        info(message, variables = []) {
            this.output(message, variables, '\x1b[34m%s\x1b[0m');
        },
        input(question, answer) {
            return __awaiter(this, void 0, void 0, function* () {
                return yield (0, prompts_1.input)({
                    message: question,
                    default: answer,
                    required: typeof answer !== 'string'
                });
            });
        },
        output(message, variables = [], color) {
            for (const variable of variables) {
                message = message.replace('%s', variable);
            }
            message = `${this.brand} ${message}`.trim();
            if (color) {
                console.log(color, message);
                return;
            }
            console.log(message);
        },
        success(message, variables = []) {
            this.output(message, variables, '\x1b[32m%s\x1b[0m');
        },
        system(message, variables = []) {
            this.output(message, variables, '\x1b[35m%s\x1b[0m');
        },
        warning(message, variables = []) {
            this.output(message, variables, '\x1b[33m%s\x1b[0m');
        }
    };
    return controls;
}
class Terminal extends Router_js_1.default {
    get args() {
        return [...this._args];
    }
    get brand() {
        return this._control.brand;
    }
    get control() {
        return Object.freeze(this._control);
    }
    get data() {
        if (!this._data) {
            this._data = (0, Nest_js_1.objectFromArgs)(this._args.join(' '));
        }
        return Object.assign({}, this._data);
    }
    constructor(args, brand = '') {
        super();
        this.command = args[0] || '';
        this._args = args.slice(1);
        this._control = control(brand);
    }
    expect(flags, defaults) {
        for (const flag of flags) {
            if (this.data[flag]) {
                return this.data[flag];
            }
        }
        return defaults;
    }
    run() {
        const req = this.request({ data: this.data });
        const res = this.response();
        return this.resolve(this.command, req, res);
    }
}
exports.default = Terminal;
