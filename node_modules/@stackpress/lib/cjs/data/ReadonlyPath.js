"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
class ReadonlyPath {
    constructor(hash) {
        this.hash = hash;
    }
    forEach(notation_1, callback_1) {
        return __awaiter(this, arguments, void 0, function* (notation, callback, separator = '.') {
            const path = notation.split(separator);
            return yield this.hash.forEach(...path, callback);
        });
    }
    get(notation, separator = '.') {
        const path = notation.split(separator);
        return this.hash.get(...path);
    }
    has(notation, separator = '.') {
        const path = notation.split(separator);
        return this.hash.has(...path);
    }
}
exports.default = ReadonlyPath;
