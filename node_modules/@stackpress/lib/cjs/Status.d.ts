import { ResponseStatus } from './types.js';
export declare const codes: Record<string, ResponseStatus>;
declare const Status: {
    CONTINUE: ResponseStatus;
    PROCESSING: ResponseStatus;
    OK: ResponseStatus;
    CREATED: ResponseStatus;
    ACCEPTED: ResponseStatus;
    EMPTY: ResponseStatus;
    RESET: ResponseStatus;
    PARTIAL: ResponseStatus;
    MOVED: ResponseStatus;
    FOUND: ResponseStatus;
    REDIRECT: ResponseStatus;
    CACHE: ResponseStatus;
    TEMPORARY: ResponseStatus;
    PERMANENT: ResponseStatus;
    ABORT: ResponseStatus;
    BAD_REQUEST: ResponseStatus;
    UNAUTHORIZED: ResponseStatus;
    FORBIDDEN: ResponseStatus;
    NOT_FOUND: ResponseStatus;
    BAD_METHOD: ResponseStatus;
    NOT_ACCEPTABLE: ResponseStatus;
    REQUEST_TIMEOUT: ResponseStatus;
    CONFLICT: ResponseStatus;
    GONE: ResponseStatus;
    LENGTH_REQUIRED: ResponseStatus;
    TOO_LARGE: ResponseStatus;
    TOO_LONG: ResponseStatus;
    UNSUPPORTED_TYPE: ResponseStatus;
    BAD_RANGE: ResponseStatus;
    BAD_EXPECTATION: ResponseStatus;
    MISDIRECTED: ResponseStatus;
    UNPROCESSABLE: ResponseStatus;
    LOCKED: ResponseStatus;
    BAD_DEPENDENCY: ResponseStatus;
    UPGRADE_REQUIRED: ResponseStatus;
    BAD_PRECONDITION: ResponseStatus;
    TOO_MANY: ResponseStatus;
    HEADER_TOO_LARGE: ResponseStatus;
    LEGAL_REASONS: ResponseStatus;
    ERROR: ResponseStatus;
    NOT_IMPLEMENTED: ResponseStatus;
    BAD_GATEWAY: ResponseStatus;
    UNAVAILABLE: ResponseStatus;
    RESPONSE_TIMEOUT: ResponseStatus;
    BAD_VERSION: ResponseStatus;
    INSUFFICIENT_STORAGE: ResponseStatus;
    INFINITE_LOOP: ResponseStatus;
    NETWORK_AUTHENTICATION_REQUIRED: ResponseStatus;
    find(status: string): ResponseStatus | undefined;
    get(code: number): ResponseStatus | undefined;
};
export default Status;
