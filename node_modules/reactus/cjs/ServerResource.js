"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const plugins_js_1 = require("./plugins.js");
class ServerResource {
    get config() {
        return this._config ? Object.freeze(this._config) : null;
    }
    constructor(server, config) {
        this._dev = null;
        this._cwd = config.cwd;
        this.base = config.basePath || '/';
        this._config = config.config;
        this._ignore = config.watchIgnore || [];
        this._optimize = config.optimizeDeps;
        this._plugins = config.plugins;
        this._server = server;
    }
    build(config) {
        return __awaiter(this, void 0, void 0, function* () {
            const { build } = yield Promise.resolve().then(() => __importStar(require('vite')));
            const settings = Object.assign({}, config);
            settings.plugins = yield this.plugins();
            return build(Object.assign({ logLevel: 'silent' }, settings));
        });
    }
    dev() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this._dev) {
                this._dev = yield this._createServer();
                this._dev.middlewares.use((0, plugins_js_1.hmr)(this._server));
            }
            return this._dev;
        });
    }
    middlewares() {
        return __awaiter(this, void 0, void 0, function* () {
            const dev = yield this.dev();
            return dev.middlewares;
        });
    }
    plugins() {
        return __awaiter(this, void 0, void 0, function* () {
            const react = yield Promise.resolve().then(() => __importStar(require('@vitejs/plugin-react')));
            const injectCSS = this._server.paths.css
                ? (0, plugins_js_1.css)(this._server.paths.css)
                : null;
            return [
                injectCSS,
                (0, plugins_js_1.vfs)(this._server.vfs),
                (0, plugins_js_1.file)(this._server.loader),
                react.default(),
                ...this._plugins,
            ];
        });
    }
    _createServer() {
        return __awaiter(this, void 0, void 0, function* () {
            const vite = Object.assign({ server: {
                    middlewareMode: true,
                    watch: { ignored: this._ignore }
                }, appType: 'custom', base: this.base, root: this._cwd, mode: 'development', optimizeDeps: this._optimize }, this._config);
            const { createServer } = yield Promise.resolve().then(() => __importStar(require('vite')));
            const config = Object.assign({}, vite);
            config.plugins = yield this.plugins();
            return yield createServer(config);
        });
    }
}
exports.default = ServerResource;
