import type { BuildResults } from './types.js';
import type Document from './Document.js';
import type Server from './Server.js';
export default class DocumentBuilder {
    protected _document: Document;
    protected _server: Server;
    constructor(document: Document);
    buildAssets(): Promise<[import("rollup").OutputChunk, ...(import("rollup").OutputAsset | import("rollup").OutputChunk)[]]>;
    buildClient(): Promise<[import("rollup").OutputChunk, ...(import("rollup").OutputAsset | import("rollup").OutputChunk)[]]>;
    buildPage(assets?: BuildResults): Promise<[import("rollup").OutputChunk, ...(import("rollup").OutputAsset | import("rollup").OutputChunk)[]]>;
    protected _getAssetBuildOptions(url: string): Promise<import("vite").InlineConfig>;
    protected _getClientBuildOptions(url: string): Promise<import("vite").InlineConfig>;
    protected _getPageBuildOptions(url: string): Promise<import("vite").InlineConfig>;
    protected _renderVFS(name: string, template: string): Promise<string>;
}
