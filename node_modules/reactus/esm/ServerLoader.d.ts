import type { FileSystem } from '@stackpress/lib/types';
import FileLoader from '@stackpress/lib/FileLoader';
import type ServerResource from './ServerResource.js';
export type ServerLoaderConfig = {
    fs?: FileSystem;
    cwd?: string;
    production: boolean;
    resource: ServerResource;
};
export default class ServerLoader {
    protected _loader: FileLoader;
    protected _production: boolean;
    protected _resource: ServerResource;
    get cwd(): string;
    get fs(): FileSystem;
    constructor(config: ServerLoaderConfig);
    absolute(pathname: string, pwd?: string): Promise<string>;
    fetch<T = any>(url: string): Promise<T>;
    import<T = any>(pathname: string, extnames?: string[]): Promise<T>;
    relative(pathname: string, require: string, withExtname?: boolean): string;
    resolveFile(pathname: string, extnames?: string[], pwd?: string, exists?: boolean): Promise<string | null>;
    resolve(pathname: string, extnames?: string[]): Promise<{
        filepath: string;
        basepath: string;
        extname: string;
    }>;
}
