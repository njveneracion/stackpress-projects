import path from 'node:path';
import FileLoader from '@stackpress/lib/FileLoader';
export default class Server {
    loader;
    _paths;
    _routes;
    _templates;
    get cwd() {
        return this.loader.cwd;
    }
    get fs() {
        return this.loader.fs;
    }
    get paths() {
        return Object.freeze(this._paths);
    }
    get routes() {
        return Object.freeze(this._routes);
    }
    get templates() {
        return Object.freeze(this._templates);
    }
    constructor(config) {
        const cwd = config.cwd || process.cwd();
        this.loader = new FileLoader(config.fs, cwd);
        this._routes = {
            client: config.clientRoute,
            css: config.cssRoute
        };
        this._paths = {
            page: config.pagePath
        };
        this._templates = {
            document: config.documentTemplate
        };
    }
    async import(pathname, extnames = ['.js']) {
        const meta = await this.resolve(pathname, extnames);
        return await this.loader.import(meta.filepath);
    }
    async resolve(pathname, extnames = ['.js']) {
        const filepath = await this.loader.resolveFile(pathname, extnames, this.cwd, true);
        const basepath = this.loader.basepath(filepath);
        const extname = path.extname(filepath);
        return { filepath, basepath, extname };
    }
}
