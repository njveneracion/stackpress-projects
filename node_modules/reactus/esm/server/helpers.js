import path from 'node:path';
import crypto from 'node:crypto';
import { StrictMode } from 'react';
import { renderToString } from 'react-dom/server';
import { jsx } from 'react/jsx-runtime';
import NodeFS from '@stackpress/lib/NodeFS';
import { BASE62_ALPHABET, DOCUMENT_TEMPLATE, HASH_LENGTH } from './constants.js';
export function configure(options) {
    const cwd = options.cwd || process.cwd();
    return Object.freeze({
        clientRoute: options.clientRoute || '/client',
        cssRoute: options.cssRoute || '/assets',
        cwd: options.cwd || process.cwd(),
        documentTemplate: options.documentTemplate || DOCUMENT_TEMPLATE,
        fs: options.fs || new NodeFS(),
        pagePath: options.pagePath || path.join(cwd, '.reactus/page')
    });
}
;
export function id(content, length = HASH_LENGTH) {
    const md5 = crypto.createHash('md5').update(content).digest('hex');
    let num = parseInt(md5.slice(0, 12), 16);
    let hash = '';
    while (num > 0) {
        const index = num % 62;
        hash = BASE62_ALPHABET[index] + hash;
        num = Math.floor(num / 62);
    }
    return hash.padStart(length, '0').slice(0, length);
}
export function renderJSX(element, props = {}) {
    return element ? renderToString(jsx(StrictMode, { children: jsx(element, { ...props }) })) : '';
}
