import path from 'node:path';
export default class DocumentLoader {
    _document;
    _server;
    constructor(document) {
        this._document = document;
        this._server = document.server;
    }
    async absolute() {
        const loader = this._server.loader;
        return await loader.absolute(this._document.entry);
    }
    async import() {
        const { loader, production } = this._server;
        if (production) {
            const pagePath = this._server.paths.page;
            const filepath = path.join(pagePath, `${this._document.id}.js`);
            return await loader.import(filepath);
        }
        const { filepath } = await loader.resolve(this._document.entry);
        return await loader.fetch(`file://${filepath}`);
    }
    async relative(fromFile) {
        if (this._document.entry.startsWith(`@${path.sep}`)) {
            const absolute = await this.absolute();
            return this._server.loader.relative(fromFile, absolute);
        }
        return this._document.entry;
    }
}
