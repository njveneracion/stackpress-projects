import type { IncomingMessage, ServerResponse } from 'node:http';
import type { ElementType } from 'react';
import type { InlineConfig, PluginOption, DepOptimizationOptions } from 'vite';
import type { OutputChunk, OutputAsset } from 'rollup';
import type { FileSystem, ErrorResponse, SuccessResponse } from '@stackpress/lib/types';
import type Document from './Document.js';
export type BuildStatus = Partial<ErrorResponse & SuccessResponse<{
    type: 'page' | 'client' | 'asset';
    id: string;
    entry: string;
    contents: string | Uint8Array<ArrayBufferLike>;
    source?: string;
    destination: string;
}>>;
export type BuildResults = [OutputChunk, ...(OutputChunk | OutputAsset)[]];
export type DocumentImport = {
    default: ElementType;
    Head?: ElementType;
    styles?: string[];
};
export type DocumentIterator<T = unknown> = (document: Document, index: number) => T;
export type IM = IncomingMessage;
export type SR = ServerResponse<IM>;
export type Next = () => void;
export type ViteConfig = InlineConfig;
export type DevelopConfig = {
    basePath: string;
    clientRoute: string;
    clientTemplate: string;
    cssFiles?: string[];
    cwd: string;
    documentTemplate: string;
    fs?: FileSystem;
    optimizeDeps?: DepOptimizationOptions;
    plugins: PluginOption[];
    vite?: ViteConfig;
    watchIgnore?: string[];
};
export type BuildConfig = {
    assetPath: string;
    basePath: string;
    clientPath: string;
    clientTemplate: string;
    cssFiles?: string[];
    cwd: string;
    fs?: FileSystem;
    optimizeDeps?: DepOptimizationOptions;
    pagePath: string;
    pageTemplate: string;
    plugins: PluginOption[];
};
export type ProductionConfig = {
    clientRoute: string;
    cssRoute: string;
    cwd: string;
    documentTemplate: string;
    fs?: FileSystem;
    pagePath: string;
    plugins: PluginOption[];
};
export type ServerConfig = {
    assetPath: string;
    basePath: string;
    clientPath: string;
    clientRoute: string;
    clientTemplate: string;
    cssFiles?: string[];
    cssRoute: string;
    cwd: string;
    documentTemplate: string;
    fs?: FileSystem;
    optimizeDeps?: DepOptimizationOptions;
    pagePath: string;
    pageTemplate: string;
    plugins: PluginOption[];
    production: boolean;
    vite?: ViteConfig;
    watchIgnore?: string[];
};
