import type { ViteDevServer, PluginOption, InlineConfig, DepOptimizationOptions } from 'vite';
import type Server from './Server.js';
export type ResourceConfig = {
    basePath: string;
    config?: InlineConfig;
    cwd: string;
    optimizeDeps?: DepOptimizationOptions;
    plugins: PluginOption[];
    watchIgnore?: string[];
};
export default class ServerResource {
    readonly base: string;
    protected _config?: InlineConfig;
    protected _cwd: string;
    protected _dev: ViteDevServer | null;
    protected _ignore: string[];
    protected _optimize?: DepOptimizationOptions;
    protected _plugins: PluginOption[];
    protected _server: Server;
    get config(): Readonly<InlineConfig> | null;
    constructor(server: Server, config: ResourceConfig);
    build(config: InlineConfig): Promise<import("rollup").RollupOutput | import("rollup").RollupOutput[] | import("rollup").RollupWatcher>;
    dev(): Promise<ViteDevServer>;
    middlewares(): Promise<import("vite").Connect.Server>;
    plugins(): Promise<PluginOption[]>;
    protected _createServer(): Promise<ViteDevServer>;
}
