import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { createContext } from 'react';
import { useState, useEffect, useContext } from 'react';
export const ModalContext = createContext({
    _title: '',
    _className: '',
    _body: undefined,
    _color: '',
    opened: false,
    curved: false,
    rounded: false,
    pill: false,
    title: () => { },
    className: () => { },
    round: () => { },
    color: () => { },
    body: () => { },
    open: () => { },
});
export function ModalProvider({ children, ...config }) {
    const [ready, isReady] = useState(false);
    const [opened, open] = useState(false);
    const [_round, round] = useState(config.curved
        ? 'curved' : config.rounded
        ? 'rounded' : config.pill
        ? 'pill' : 'none');
    const [_title, title] = useState(config.title || '');
    const [_color, color] = useState(config.color);
    const [_className, className] = useState(config.className || '');
    const [_body, body] = useState();
    const value = {
        _title,
        _className,
        _body,
        opened,
        curved: _round === 'curved',
        rounded: _round === 'rounded',
        pill: _round === 'pill',
        className,
        round,
        title,
        color,
        body,
        open
    };
    useEffect(() => {
        isReady(true);
    }, []);
    return (_jsxs(ModalContext.Provider, { value: value, children: [children, ready && (_jsx(Modal, { curved: _round === 'curved', rounded: _round === 'rounded', pill: _round === 'pill', color: _color || undefined, title: _title, className: _className, opened: opened, onClose: () => open(false), children: _body }))] }));
}
;
export function useModal() {
    const { className, title, body, round, color, open } = useContext(ModalContext);
    return { className, title, body, round, color, open };
}
export default function Modal(props) {
    const { opened = false, absolute, title, curved, rounded, pill, color, style = {}, className, onClose, children } = props;
    if (opened) {
        style.display = 'flex';
    }
    const classNames = ['frui-modal'];
    if (absolute) {
        classNames.push('frui-modal-absolute');
    }
    else {
        classNames.push('frui-modal-fixed');
    }
    if (className) {
        classNames.push(className);
    }
    const overlay = ['frui-modal-overlay'];
    if (curved) {
        overlay.push('frui-curved');
    }
    else if (rounded) {
        overlay.push('frui-rounded');
    }
    else if (pill) {
        overlay.push('frui-pill');
    }
    const headStyle = color ? { backgroundColor: color } : undefined;
    return (_jsx("div", { className: classNames.join(' '), style: style, children: _jsxs("section", { className: overlay.join(' '), children: [_jsxs("header", { className: "frui-modal-head", style: headStyle, children: [_jsx("h6", { className: "frui-modal-title", children: title }), typeof onClose === 'function' && (_jsx("button", { className: "frui-modal-close", onClick: () => { onClose(); }, children: "\u00D7" }))] }), _jsx("main", { className: "frui-modal-body", children: children })] }) }));
}
;
