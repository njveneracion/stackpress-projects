import type { ReactNode, CSSProperties } from 'react';
import React from 'react';
export type ModalContextProps = {
    _title: string;
    _className: string;
    _body?: ReactNode;
    _color?: string;
    opened: boolean;
    curved: boolean;
    rounded: boolean;
    pill: boolean;
    round: (size: 'none' | 'rounded' | 'curved' | 'pill') => void;
    title: (title: string) => void;
    color: (color: string) => void;
    open: (opened: boolean) => void;
    className: (className: string) => void;
    body: (body: ReactNode) => void;
};
export type ModalProviderProps = {
    title?: string;
    color?: string;
    opened?: boolean;
    curved?: boolean;
    rounded?: boolean;
    pill?: boolean;
    className?: string;
    children: ReactNode;
};
export type ModalProps = {
    opened?: boolean;
    fixed?: boolean;
    absolute?: boolean;
    onClose?: Function;
    title?: string;
    curved?: boolean;
    rounded?: boolean;
    pill?: boolean;
    style?: CSSProperties;
    color?: string;
    className?: string;
    children?: React.ReactNode;
};
export declare const ModalContext: React.Context<ModalContextProps>;
export declare function ModalProvider({ children, ...config }: ModalProviderProps): import("react/jsx-runtime").JSX.Element;
export declare function useModal(): {
    className: (className: string) => void;
    title: (title: string) => void;
    body: (body: ReactNode) => void;
    round: (size: "none" | "rounded" | "curved" | "pill") => void;
    color: (color: string) => void;
    open: (opened: boolean) => void;
};
export default function Modal(props: ModalProps): import("react/jsx-runtime").JSX.Element;
