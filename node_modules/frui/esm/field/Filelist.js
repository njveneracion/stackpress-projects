import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, useEffect } from 'react';
import { useInput } from './Input.js';
import Input from './Input.js';
export function useFilelist(config) {
    const { defaultValue, onChange, onUpdate, onUpload } = config;
    const [queued, setQueue] = useState(0);
    const [uploaded, setUploaded] = useState(defaultValue || []);
    useEffect(() => {
        onUpdate && onUpdate(uploaded);
    }, [uploaded]);
    const handlers = {
        change: (e) => {
            if (onUpload && e.target.files) {
                const pending = Array.from(e.target.files);
                const queue = queued + pending.length;
                setQueue(queue);
                const values = uploaded;
                onUpload(pending, urls => {
                    const updated = queue - urls.length;
                    values.push(...urls);
                    setQueue(updated > 0 ? updated : 0);
                    setUploaded([...values]);
                });
            }
            onChange && onChange(e);
        },
        remove: (index) => {
            setQueue(queued ? queued - 1 : 0);
            const keepUploaded = [...uploaded];
            keepUploaded.splice(index, 1);
            setUploaded(keepUploaded);
        },
        reset: () => {
            setQueue(0);
            setUploaded([]);
        }
    };
    useInput({ onChange: handlers.change, onUpdate });
    return { queued, uploaded, handlers };
}
;
export default function Filelist(props) {
    const { uploading = 'Uploading...', name, defaultValue, value, error, style, className, onChange, onUpdate, onUpload, ...attributes } = props;
    const { queued, uploaded, handlers } = useFilelist({
        defaultValue: value || defaultValue,
        onChange,
        onUpdate,
        onUpload
    });
    const classNames = ['frui-field-filelist'];
    if (className) {
        classNames.push(className);
    }
    return (_jsxs("div", { className: classNames.join(' '), style: style, children: [_jsx(Input, { ...attributes, multiple: true, type: "file", error: error, className: "frui-field-filelist-control", onChange: handlers.change }), uploaded.length > 0 && uploaded.map((url, i) => (_jsxs("div", { className: "frui-field-filelist-file", children: [_jsx("a", { className: "frui-field-filelist-link", href: url, target: "_blank", rel: "noreferrer", children: url }), _jsx("div", { className: "frui-field-filelist-remove", onClick: () => handlers.remove(i), children: "\u00D7" }), _jsx("input", { type: "hidden", name: name, value: url })] }, i))), queued > 0 && (_jsx("div", { className: "frui-field-filelist-file", children: _jsx("span", { className: "frui-field-filelist-link", children: uploading }) }))] }));
}
