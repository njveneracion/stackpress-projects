import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import MarkdownFrame from 'markdown-to-jsx';
import Textarea from './Textarea.js';
import Button from '../form/Button.js';
import { renderToStaticMarkup } from 'react-dom/server';
export function useMarkdown({ onUpdate }) {
    const [mode, setMode] = useState('edit');
    return {
        mode,
        handlers: {
            mode: setMode,
            update: (value) => {
                onUpdate && onUpdate(value);
            }
        }
    };
}
export default function Markdown(props) {
    const { onUpdate, defaultValue, value, rows = 9, children, ...attributes } = props;
    const { mode, handlers } = useMarkdown({ onUpdate });
    const previewStyles = {
        display: mode === 'preview' ? 'block' : 'none'
    };
    const current = (children?.toString()
        || value
        || defaultValue
        || '');
    const markdown = renderToStaticMarkup(_jsx(MarkdownFrame, { children: current }));
    return (_jsxs("div", { className: "frui-field-markdown", children: [_jsxs("div", { className: "frui-field-markdown-nav", children: [_jsx(Button, { muted: mode === 'edit', onClick: () => handlers.mode('edit'), children: "\u270E" }), _jsx(Button, { muted: mode === 'preview', onClick: () => handlers.mode('preview'), children: "\u268E" })] }), _jsx("div", { style: { display: mode === 'edit' ? 'block' : 'none' }, children: _jsx(Textarea, { ...attributes, rows: rows, value: value, defaultValue: defaultValue, onUpdate: handlers.update }) }), _jsx("iframe", { className: "frui-field-markdown-preview", style: previewStyles, srcDoc: markdown })] }));
}
;
