import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, useEffect } from 'react';
export function useRadio(config) {
    const { onChange, onUpdate, defaultChecked, checked } = config;
    const [isChecked, check] = useState(Boolean(defaultChecked || checked));
    const [isHovering, hover] = useState(false);
    useEffect(() => {
        if (typeof checked === 'undefined')
            return;
        if (checked !== isChecked) {
            check(checked);
        }
    }, [checked]);
    return {
        isHovering,
        isChecked,
        handlers: {
            out: (_e) => hover(false),
            over: (_e) => hover(true),
            change: (e) => {
                if (e.target.checked !== checked) {
                    check(e.target.checked);
                }
                onChange && onChange(e);
                onUpdate && onUpdate(e.target.value, e.target.checked);
            }
        }
    };
}
export default function Radio(props) {
    const { defaultChecked, checked, label, error, check, circle, square, rounded, blue, orange, style, className, onChange, onUpdate, ...attributes } = props;
    const { handlers } = useRadio({
        onChange,
        onUpdate,
        checked,
        defaultChecked
    });
    const classNames = ['frui-field-option'];
    if (rounded) {
        classNames.push('frui-field-option-rounded');
    }
    if (check) {
        classNames.push('frui-field-option-check');
    }
    else if (square) {
        classNames.push('frui-field-option-square');
    }
    else {
        classNames.push('frui-field-option-circle');
    }
    if (blue) {
        classNames.push('frui-field-option-blue');
    }
    else if (orange) {
        classNames.push('frui-field-option-orange');
    }
    else {
        classNames.push('frui-field-option-default');
    }
    if (error) {
        classNames.push('frui-tx-error');
    }
    if (className) {
        classNames.push(className);
    }
    return (_jsxs("label", { className: classNames.join(' '), style: style, children: [_jsx("input", { ...attributes, onChange: handlers.change, onMouseOut: handlers.out, onMouseOver: handlers.over, type: "radio", className: "frui-field-option-control", checked: checked, defaultChecked: defaultChecked }), _jsx("span", { className: "frui-field-option-label", children: label })] }));
}
