import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import Input from './Input.js';
import Button from '../form/Button.js';
import make from '../form/Fieldset.js';
export function useTextlists(config) {
    const { values, index, set } = config;
    const handlers = {
        update: (value) => {
            const newValues = [...(values || [])];
            newValues[index] = value;
            set(newValues);
        },
        remove: () => {
            const newValues = [...(values || [])];
            newValues[index] = undefined;
            set(newValues);
        }
    };
    return { handlers };
}
export function TextlistFields(props) {
    const { name, config, values, index, error, set } = props;
    const placeholder = config?.placeholder;
    const { handlers } = useTextlists({ values, index, set });
    const value = values ? values[index] : undefined;
    return (_jsxs("div", { className: "frui-field-textlist-row", children: [_jsx(Input, { className: "frui-field-textlist-input", placeholder: placeholder, defaultValue: values ? values[index] : undefined, onUpdate: handlers.update, error: error, required: true }), _jsx(Button, { outline: true, error: true, onClick: handlers.remove, className: "frui-field-textlist-remove", children: "\u00D7" }), typeof value === 'string' && (_jsx("input", { type: "hidden", name: name, value: String(value) }))] }));
}
;
const Fieldset = make(TextlistFields);
export default function Textlist(props) {
    const { placeholder, ...attributes } = props;
    const config = { placeholder };
    return (_jsx(Fieldset, { ...attributes, config: config, emptyValue: "" }));
}
;
