import type { ChangeEvent, KeyboardEvent, CSSProperties } from 'react';
import type { ExtendsType, HTMLInputProps } from '../types.js';
export type TaglistConfig = {
    value?: string[];
    defaultValue?: string[];
    onChange?: Function;
    onUpdate?: Function;
};
export type TaglistProps = ExtendsType<HTMLInputProps, {
    name?: string;
    error?: any;
    color?: string;
    info?: boolean;
    warning?: boolean;
    success?: boolean;
    danger?: boolean;
    muted?: boolean;
    onUpdate?: (value: string) => void;
    className?: string;
    style?: CSSProperties;
}>;
export declare function useTaglist(config: TaglistConfig): {
    input: string;
    tags: string[];
    handlers: {
        change: (e: ChangeEvent<HTMLInputElement>) => void;
        remove: (index: number) => void;
        edit: (e: KeyboardEvent<HTMLInputElement>) => void;
        save: () => void;
    };
};
export default function Taglist(props: TaglistProps): import("react/jsx-runtime").JSX.Element;
