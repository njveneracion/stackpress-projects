import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import Select from './Select.js';
import currencies from '../data/currencies.js';
import countries from '../data/countries.js';
export function useCurrency(config) {
    const { value, defaultValue, map } = config;
    const options = currencies
        .filter(currency => currency.type === 'fiat')
        .map(currency => ({
        ...currency,
        flag: countries.find(country => (currency.code === 'USD' && country.iso3 === 'USA')
            || (currency.code !== 'USD' && country.cur === currency.code))?.flag
    }))
        .filter(currency => !!currency.flag)
        .map(currency => map(currency));
    const selected = typeof value === 'string'
        ? options.filter(option => option.value === value)[0]
        : undefined;
    const selectedDefault = typeof defaultValue === 'string'
        ? options.filter(option => option.value === defaultValue)[0]
        : undefined;
    return { selected, selectedDefault, options };
}
;
export default function Currency(props) {
    const { value, defaultValue, placeholder = 'Choose a Currency', ...attributes } = props;
    const { selected, selectedDefault, options } = useCurrency({
        value,
        defaultValue,
        map: currency => ({
            label: (_jsxs(_Fragment, { children: [_jsx("span", { className: "text-lg", children: currency.flag }), _jsxs("span", { className: "frui-field-select-label", children: [currency.name, " (", currency.code, ")"] })] })),
            value: currency.code,
            keyword: (keyword) => currency.code.toLowerCase().indexOf(keyword) >= 0
                || currency.name.toLowerCase().indexOf(keyword) >= 0
                || currency.code.toLowerCase().indexOf(keyword) >= 0
        })
    });
    return (_jsx(Select, { ...attributes, placeholder: placeholder, value: selected, defaultValue: selectedDefault, options: options, searchable: true }));
}
;
