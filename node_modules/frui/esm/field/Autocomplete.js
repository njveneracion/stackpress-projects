import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import Input from './Input.js';
export function useAutocomplete(config) {
    const { options: defaultOptions, defaultValue, onSelected, onQuery, onDropdown, onChange, onUpdate } = config;
    const [value, setValue] = useState(defaultValue || '');
    const [options, setOptions] = useState(defaultOptions || []);
    const [query, setQuery] = useState('');
    const [showing, show] = useState(false);
    const handlers = {
        search: (e) => {
            show(true);
            onDropdown && onDropdown(true);
            setTimeout(() => {
                const input = e.target;
                setQuery(input.value);
                onQuery && onQuery(input.value, setOptions);
            });
        },
        update: (e) => {
            onChange && onChange(e);
            onUpdate && onUpdate(e.target.value);
            setValue(e.target.value);
        },
        match: (option) => {
            const keyword = (query || '').toLowerCase();
            const phrase = option;
            return query.length && phrase.toLowerCase().indexOf(keyword) >= 0;
        },
        select: (option) => {
            show(false);
            onDropdown && onDropdown(false);
            onUpdate && onUpdate(option);
            setValue(option);
            if (onChange) {
                const e = { target: { value: option } };
                onChange(e);
            }
            onSelected && onSelected(option);
        },
        blur: (_e) => {
            setTimeout(() => show(false), 10);
        }
    };
    return { value, options, showing, handlers };
}
;
export function AutocompleteDropdown(props) {
    const { options, show, select, match } = props;
    const style = !show ? { display: 'none' } : undefined;
    if (!options || options.filter(match).length === 0) {
        return null;
    }
    return (_jsx("div", { className: "frui-field-autocomplete-dropdown", style: style, children: _jsx("div", { className: "frui-field-autocomplete-options", children: options && options.filter(match).map((option, i) => (_jsx("div", { onClick: _ => select(option), className: "frui-field-autocomplete-option", children: option }, i))) }) }));
}
;
export default function Autocomplete(props) {
    const { options: defaultOptions, className, style, defaultValue, value: _value, onQuery, onDropdown, onChange, onUpdate, ...attributes } = props;
    const { value, options, showing, handlers } = useAutocomplete({
        defaultValue: defaultValue || _value,
        options: defaultOptions,
        onQuery,
        onDropdown,
        onChange,
        onUpdate
    });
    const classNames = ['frui-field-autocomplete'];
    if (className) {
        classNames.push(className);
    }
    return (_jsxs("div", { className: classNames.join(' '), style: style, children: [_jsx(Input, { onBlur: handlers.blur, onKeyDown: handlers.search, onChange: handlers.update, ...attributes, value: value }), _jsx(AutocompleteDropdown, { options: options, show: showing, select: handlers.select, match: handlers.match })] }));
}
;
