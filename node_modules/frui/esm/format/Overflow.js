import { Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export default function Overflow(props) {
    const { value, length, words, hellip } = props;
    const count = typeof length === 'string' ? Number(length) || undefined : length;
    if (words) {
        const words = value.split(' ');
        if (count && words.length > count) {
            return (_jsxs(_Fragment, { children: [words.slice(0, count).join(' '), hellip && (_jsx(_Fragment, { children: "\u2026" }))] }));
        }
        return (_jsx(_Fragment, { children: value }));
    }
    if (count && value.length > count) {
        return (_jsxs(_Fragment, { children: [value.slice(0, count), hellip && (_jsx(_Fragment, { children: "\u2026" }))] }));
    }
    return (_jsx(_Fragment, { children: value }));
}
;
