"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = DateFormat;
const jsx_runtime_1 = require("react/jsx-runtime");
const moment_1 = __importDefault(require("moment"));
moment_1.default.locale('short', {
    parentLocale: 'en',
    relativeTime: {
        future: "-%s",
        past: "%s",
        s: 'now',
        ss: 'now',
        m: "1m",
        mm: "%dm",
        h: "1h",
        hh: "%dh",
        d: "1d",
        dd: "%dd",
        w: "1w",
        ww: "%dw",
        M: "1M",
        MM: "%dM",
        y: "1y",
        yy: "%dy"
    }
});
function DateFormat(props) {
    const { value, locale = 'en', format = 'MMMM Do YYYY, h:mm:ss a' } = props;
    const date = new Date(value);
    if (format === 'ago') {
        return ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: (0, moment_1.default)(date, format).locale(locale).fromNow() }));
    }
    else if (format === 'a') {
        return ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: (0, moment_1.default)(date, format).locale('short').fromNow() }));
    }
    return ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: (0, moment_1.default)(date).locale(locale).format(format) }));
}
;
