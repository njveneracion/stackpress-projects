"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModalContext = void 0;
exports.ModalProvider = ModalProvider;
exports.useModal = useModal;
exports.default = Modal;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("react");
exports.ModalContext = (0, react_1.createContext)({
    _title: '',
    _className: '',
    _body: undefined,
    _color: '',
    opened: false,
    curved: false,
    rounded: false,
    pill: false,
    title: () => { },
    className: () => { },
    round: () => { },
    color: () => { },
    body: () => { },
    open: () => { },
});
function ModalProvider(_a) {
    var { children } = _a, config = __rest(_a, ["children"]);
    const [ready, isReady] = (0, react_2.useState)(false);
    const [opened, open] = (0, react_2.useState)(false);
    const [_round, round] = (0, react_2.useState)(config.curved
        ? 'curved' : config.rounded
        ? 'rounded' : config.pill
        ? 'pill' : 'none');
    const [_title, title] = (0, react_2.useState)(config.title || '');
    const [_color, color] = (0, react_2.useState)(config.color);
    const [_className, className] = (0, react_2.useState)(config.className || '');
    const [_body, body] = (0, react_2.useState)();
    const value = {
        _title,
        _className,
        _body,
        opened,
        curved: _round === 'curved',
        rounded: _round === 'rounded',
        pill: _round === 'pill',
        className,
        round,
        title,
        color,
        body,
        open
    };
    (0, react_2.useEffect)(() => {
        isReady(true);
    }, []);
    return ((0, jsx_runtime_1.jsxs)(exports.ModalContext.Provider, { value: value, children: [children, ready && ((0, jsx_runtime_1.jsx)(Modal, { curved: _round === 'curved', rounded: _round === 'rounded', pill: _round === 'pill', color: _color || undefined, title: _title, className: _className, opened: opened, onClose: () => open(false), children: _body }))] }));
}
;
function useModal() {
    const { className, title, body, round, color, open } = (0, react_2.useContext)(exports.ModalContext);
    return { className, title, body, round, color, open };
}
function Modal(props) {
    const { opened = false, absolute, title, curved, rounded, pill, color, style = {}, className, onClose, children } = props;
    if (opened) {
        style.display = 'flex';
    }
    const classNames = ['frui-modal'];
    if (absolute) {
        classNames.push('frui-modal-absolute');
    }
    else {
        classNames.push('frui-modal-fixed');
    }
    if (className) {
        classNames.push(className);
    }
    const overlay = ['frui-modal-overlay'];
    if (curved) {
        overlay.push('frui-curved');
    }
    else if (rounded) {
        overlay.push('frui-rounded');
    }
    else if (pill) {
        overlay.push('frui-pill');
    }
    const headStyle = color ? { backgroundColor: color } : undefined;
    return ((0, jsx_runtime_1.jsx)("div", { className: classNames.join(' '), style: style, children: (0, jsx_runtime_1.jsxs)("section", { className: overlay.join(' '), children: [(0, jsx_runtime_1.jsxs)("header", { className: "frui-modal-head", style: headStyle, children: [(0, jsx_runtime_1.jsx)("h6", { className: "frui-modal-title", children: title }), typeof onClose === 'function' && ((0, jsx_runtime_1.jsx)("button", { className: "frui-modal-close", onClick: () => { onClose(); }, children: "\u00D7" }))] }), (0, jsx_runtime_1.jsx)("main", { className: "frui-modal-body", children: children })] }) }));
}
;
