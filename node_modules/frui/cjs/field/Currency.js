"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useCurrency = useCurrency;
exports.default = Currency;
const jsx_runtime_1 = require("react/jsx-runtime");
const Select_js_1 = __importDefault(require("./Select.js"));
const currencies_js_1 = __importDefault(require("../data/currencies.js"));
const countries_js_1 = __importDefault(require("../data/countries.js"));
function useCurrency(config) {
    const { value, defaultValue, map } = config;
    const options = currencies_js_1.default
        .filter(currency => currency.type === 'fiat')
        .map(currency => {
        var _a;
        return (Object.assign(Object.assign({}, currency), { flag: (_a = countries_js_1.default.find(country => (currency.code === 'USD' && country.iso3 === 'USA')
                || (currency.code !== 'USD' && country.cur === currency.code))) === null || _a === void 0 ? void 0 : _a.flag }));
    })
        .filter(currency => !!currency.flag)
        .map(currency => map(currency));
    const selected = typeof value === 'string'
        ? options.filter(option => option.value === value)[0]
        : undefined;
    const selectedDefault = typeof defaultValue === 'string'
        ? options.filter(option => option.value === defaultValue)[0]
        : undefined;
    return { selected, selectedDefault, options };
}
;
function Currency(props) {
    const { value, defaultValue, placeholder = 'Choose a Currency' } = props, attributes = __rest(props, ["value", "defaultValue", "placeholder"]);
    const { selected, selectedDefault, options } = useCurrency({
        value,
        defaultValue,
        map: currency => ({
            label: ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("span", { className: "text-lg", children: currency.flag }), (0, jsx_runtime_1.jsxs)("span", { className: "frui-field-select-label", children: [currency.name, " (", currency.code, ")"] })] })),
            value: currency.code,
            keyword: (keyword) => currency.code.toLowerCase().indexOf(keyword) >= 0
                || currency.name.toLowerCase().indexOf(keyword) >= 0
                || currency.code.toLowerCase().indexOf(keyword) >= 0
        })
    });
    return ((0, jsx_runtime_1.jsx)(Select_js_1.default, Object.assign({}, attributes, { placeholder: placeholder, value: selected, defaultValue: selectedDefault, options: options, searchable: true })));
}
;
