"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useInput = useInput;
exports.default = Input;
const jsx_runtime_1 = require("react/jsx-runtime");
function useInput({ onChange, onUpdate }) {
    return {
        handlers: {
            change: (e) => {
                onChange && onChange(e);
                onUpdate && onUpdate(e.target.value);
            }
        }
    };
}
function Input(props) {
    const { error, className, onChange, onUpdate, passRef } = props, attributes = __rest(props, ["error", "className", "onChange", "onUpdate", "passRef"]);
    const { handlers } = useInput({ onChange, onUpdate });
    const classNames = ['frui-field-input'];
    if (error) {
        classNames.push('frui-tx-error', 'frui-bd-error');
    }
    if (className) {
        classNames.push(className);
    }
    return ((0, jsx_runtime_1.jsx)("input", Object.assign({}, attributes, { className: classNames.join(' '), ref: passRef, onChange: handlers.change })));
}
;
