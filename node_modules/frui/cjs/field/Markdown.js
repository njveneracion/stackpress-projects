"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useMarkdown = useMarkdown;
exports.default = Markdown;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const markdown_to_jsx_1 = __importDefault(require("markdown-to-jsx"));
const Textarea_js_1 = __importDefault(require("./Textarea.js"));
const Button_js_1 = __importDefault(require("../form/Button.js"));
const server_1 = require("react-dom/server");
function useMarkdown({ onUpdate }) {
    const [mode, setMode] = (0, react_1.useState)('edit');
    return {
        mode,
        handlers: {
            mode: setMode,
            update: (value) => {
                onUpdate && onUpdate(value);
            }
        }
    };
}
function Markdown(props) {
    const { onUpdate, defaultValue, value, rows = 9, children } = props, attributes = __rest(props, ["onUpdate", "defaultValue", "value", "rows", "children"]);
    const { mode, handlers } = useMarkdown({ onUpdate });
    const previewStyles = {
        display: mode === 'preview' ? 'block' : 'none'
    };
    const current = ((children === null || children === void 0 ? void 0 : children.toString())
        || value
        || defaultValue
        || '');
    const markdown = (0, server_1.renderToStaticMarkup)((0, jsx_runtime_1.jsx)(markdown_to_jsx_1.default, { children: current }));
    return ((0, jsx_runtime_1.jsxs)("div", { className: "frui-field-markdown", children: [(0, jsx_runtime_1.jsxs)("div", { className: "frui-field-markdown-nav", children: [(0, jsx_runtime_1.jsx)(Button_js_1.default, { muted: mode === 'edit', onClick: () => handlers.mode('edit'), children: "\u270E" }), (0, jsx_runtime_1.jsx)(Button_js_1.default, { muted: mode === 'preview', onClick: () => handlers.mode('preview'), children: "\u268E" })] }), (0, jsx_runtime_1.jsx)("div", { style: { display: mode === 'edit' ? 'block' : 'none' }, children: (0, jsx_runtime_1.jsx)(Textarea_js_1.default, Object.assign({}, attributes, { rows: rows, value: value, defaultValue: defaultValue, onUpdate: handlers.update })) }), (0, jsx_runtime_1.jsx)("iframe", { className: "frui-field-markdown-preview", style: previewStyles, srcDoc: markdown })] }));
}
;
