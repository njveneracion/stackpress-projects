"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = InputMask;
const jsx_runtime_1 = require("react/jsx-runtime");
const Input_js_1 = __importDefault(require("./Input.js"));
require("inputmask");
function InputMask(props) {
    const { mask, regex, alias, repeat, greedy, numericInput, rightAlign, definitions, onReady } = props, attributes = __rest(props, ["mask", "regex", "alias", "repeat", "greedy", "numericInput", "rightAlign", "definitions", "onReady"]);
    const ref = (ref) => {
        if (!ref)
            return;
        const im = new Inputmask({
            mask,
            regex,
            alias,
            repeat,
            greedy,
            numericInput,
            rightAlign,
            definitions
        });
        im.mask(ref);
    };
    return (0, jsx_runtime_1.jsx)(Input_js_1.default, Object.assign({ passRef: ref }, attributes));
}
;
