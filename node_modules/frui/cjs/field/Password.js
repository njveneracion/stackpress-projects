"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.usePassword = usePassword;
exports.default = Password;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const Input_js_1 = __importDefault(require("./Input.js"));
function usePassword() {
    const [showing, show] = (0, react_1.useState)(false);
    const toggle = () => show(!showing);
    return { toggle, showing };
}
function Password(props) {
    const { error, className } = props, attributes = __rest(props, ["error", "className"]);
    const { showing, toggle } = usePassword();
    const classNames = ['frui-field-password'];
    if (className) {
        classNames.push(className);
    }
    const toggleClass = ['frui-field-password-toggle'];
    if (error) {
        toggleClass.push('frui-tx-error', 'frui-bd-error');
    }
    return ((0, jsx_runtime_1.jsxs)("div", { className: classNames.join(' '), children: [(0, jsx_runtime_1.jsx)(Input_js_1.default, Object.assign({}, attributes, { error: error, type: showing ? 'text' : 'password', className: "frui-field-password-control" })), (0, jsx_runtime_1.jsx)("span", { className: toggleClass.join(' '), onClick: toggle, children: showing ? 'âœ·' : 'A' })] }));
}
;
