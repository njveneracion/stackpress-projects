import type { JSX, ReactNode, ReactElement } from 'react';
export type ExtendsType<T, U> = Pick<T, Exclude<keyof T, keyof U>> & U;
export type AnyReactChildren = ReactNode | ReactElement | JSX.Element | ReactNode[] | ReactElement[] | JSX.Element[] | string;
export type HTMLPreProps = React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLPreElement>, HTMLPreElement>;
export type HTMLLinkProps = React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>;
export type HTMLImageProps = React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>;
export type HTMLInputProps = React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;
export type HTMLTextareaProps = React.DetailedHTMLProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>;
export type HTMLButtonProps = React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;
