'use client';
import { Fragment as _Fragment, jsx as _jsx } from "react/jsx-runtime";
import { useContext } from 'react';
import useLanguage from '../hooks/useLanguage.js';
import R22nContext from '../context.js';
const Translate = (props) => {
    const { placeholder } = useContext(R22nContext);
    const { template } = useLanguage();
    const { children, values = [] } = props;
    const phrases = [];
    const variables = Array.isArray(values) ? values : [values];
    const chunks = Array.isArray(children) ? children : [children];
    chunks.forEach(chunk => {
        if (typeof chunk === 'string') {
            phrases.push(chunk);
        }
        else {
            phrases.push(placeholder);
            variables.push(chunk);
        }
    });
    if (typeof phrases[0] === 'string') {
        phrases[0].trimStart();
    }
    if (typeof phrases[phrases.length - 1] === 'string') {
        phrases[phrases.length - 1].trimEnd();
    }
    const translate = template(phrases.join(''));
    return (_jsx(_Fragment, { children: translate(...variables) }));
};
export default Translate;
